# -*- coding: utf-8 -*-
# Generated by Django 1.11.9 on 2018-01-07 07:16
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=254)),
                ('description', models.CharField(max_length=254, null=True)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Duel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('occurrence_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Duel',
                'verbose_name_plural': 'Duels',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('photo', models.FileField(upload_to=b'uploads/users/photos/')),
                ('person_type', models.CharField(choices=[(b'0', 'Player'), (b'1', 'Administrator'), (b'2', 'Teacher')], max_length=1)),
                ('gender', models.CharField(choices=[(b'0', 'Female'), (b'1', 'Male')], max_length=1)),
            ],
            options={
                'verbose_name': 'Person',
                'verbose_name_plural': 'Persons',
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PlayerQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('readed', models.BooleanField(default=False)),
                ('answered', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Player Question',
                'verbose_name_plural': 'Player Questions',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=254)),
                ('slug', models.CharField(max_length=254)),
                ('answer', models.CharField(max_length=254)),
                ('sound', models.FileField(upload_to=b'uploads/questions/sounds/')),
                ('count', models.IntegerField(default=0)),
                ('success', models.IntegerField(default=0)),
                ('fails', models.IntegerField(default=0)),
                ('category', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='question_category', to='core.Category')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='person_player', serialize=False, to='core.Person')),
                ('level', models.IntegerField(default=1)),
                ('experience', models.IntegerField(default=1)),
                ('credits_quantity', models.IntegerField(default=10)),
                ('friends', models.ManyToManyField(related_name='friends_list', to='core.Person')),
            ],
            options={
                'verbose_name': 'Player',
                'verbose_name_plural': 'Players',
            },
            bases=('core.person',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='playerquestion',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_questions', to='core.Question'),
        ),
        migrations.AddField(
            model_name='playerquestion',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_questions', to='core.Player'),
        ),
        migrations.AddField(
            model_name='duel',
            name='challenger',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='player_duel_challenger', to='core.Player'),
        ),
        migrations.AddField(
            model_name='duel',
            name='guest',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='player_duel_guest', to='core.Player'),
        ),
        migrations.AddField(
            model_name='duel',
            name='winner',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='player_winner', to='core.Player'),
        ),
    ]
